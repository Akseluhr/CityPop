{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Heading from \"../components/Heading\";\nimport SearchButton from \"../components/SearchButton\";\nimport TextInputBox from \"../components/TextInput\";\nimport styles from \"../styles/ViewStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchCountryScreen = function SearchCountryScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputText = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      population = _useState6[0],\n      setPopulation = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var handleChange = function handleChange(e) {\n    setText(e.target.value);\n  };\n\n  var handleResponse = function handleResponse(r) {\n    console.log(r);\n    setPopulation(r['geonames'][0]['population']);\n    setName(r['geonames'][0]['name']);\n  };\n\n  var handleClick = function handleClick() {\n    setIsLoading(true);\n    fetchGeoData(inputText).then(function (response) {\n      handleResponse(response);\n    }).catch(console.log(\"Error\"));\n    setIsLoading(false);\n  };\n\n  useEffect(function () {\n    if (population > 0 && name != '') {\n      navigation.navigate(\"CityResults\", {\n        population: population,\n        name: name\n      });\n    }\n  }, [{\n    population: population,\n    name: name\n  }]);\n  return _jsxs(View, {\n    style: styles.viewContainer,\n    children: [_jsx(Heading, {\n      text: \"SEARCH BY COUNTRY\"\n    }), _jsx(TextInputBox, {\n      plcHolder: \"Enter a country...\"\n    }), _jsx(SearchButton, {\n      onPress: function onPress() {\n        return navigation.navigate(\"CountryResults\");\n      }\n    })]\n  });\n};\n\nexport default SearchCountryScreen;","map":{"version":3,"sources":["/Users/akseluhr/Documents/GitHub/CityPop/screens/SearchCountryScreen.js"],"names":["Heading","SearchButton","TextInputBox","styles","SearchCountryScreen","navigation","useState","isLoading","setIsLoading","inputText","setText","population","setPopulation","name","setName","handleChange","e","target","value","handleResponse","r","console","log","handleClick","fetchGeoData","then","response","catch","useEffect","navigate","viewContainer"],"mappings":";;AACA,OAAOA,OAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AAEA,OAAOC,MAAP;;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAC5C,kBAAkCC,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA6BF,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,OAAlB;;AACA,mBAAoCJ,QAAQ,EAA5C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAM;AACzBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAR,IAAAA,aAAa,CAACQ,CAAC,CAAC,UAAD,CAAD,CAAc,CAAd,EAAiB,YAAjB,CAAD,CAAb;AACAN,IAAAA,OAAO,CAACM,CAAC,CAAC,UAAD,CAAD,CAAc,CAAd,EAAiB,MAAjB,CAAD,CAAP;AACD,GAJD;;AAKA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvBf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAgB,IAAAA,YAAY,CAACf,SAAD,CAAZ,CAAwBgB,IAAxB,CAA6B,UAAAC,QAAQ,EAAI;AAACP,MAAAA,cAAc,CAACO,QAAD,CAAd;AAAyB,KAAnE,EAAqEC,KAArE,CAA2EN,OAAO,CAACC,GAAR,CAAY,OAAZ,CAA3E;AACAd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAJD;;AAMAoB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGjB,UAAU,GAAG,CAAb,IAAkBE,IAAI,IAAI,EAA7B,EAAgC;AAC9BR,MAAAA,UAAU,CAACwB,QAAX,CAAoB,aAApB,EAAmC;AACjClB,QAAAA,UAAU,EAAEA,UADqB;AAEjCE,QAAAA,IAAI,EAAEA;AAF2B,OAAnC;AAID;AACF,GAPQ,EAON,CAAC;AAACF,IAAAA,UAAU,EAAVA,UAAD;AAAaE,IAAAA,IAAI,EAAJA;AAAb,GAAD,CAPM,CAAT;AAQE,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAAC2B,aAApB;AAAA,eACE,KAAC,OAAD;AAAW,MAAA,IAAI,EAAC;AAAhB,MADF,EAEE,KAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB,MAFF,EAGE,KAAC,YAAD;AAAc,MAAA,OAAO,EAAE;AAAA,eAAMzB,UAAU,CAACwB,QAAX,CAAoB,gBAApB,CAAN;AAAA;AAAvB,MAHF;AAAA,IADJ;AAOD,CAnCH;;AAoCE,eAAezB,mBAAf","sourcesContent":["import { View } from 'react-native';\nimport Heading from \"../components/Heading\";\nimport SearchButton from '../components/SearchButton';\nimport TextInputBox from \"../components/TextInput\"\n//import styles from \"../styles/ButtonsStyle\"\nimport styles from \"../styles/ViewStyle\"\n\nconst SearchCountryScreen = ({navigation}) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [inputText, setText] = useState('')\n  const [population, setPopulation] = useState()\n  const [name, setName] = useState('')\n\n  const handleChange = (e) =>{\n    setText(e.target.value)\n  }\n  const handleResponse = (r) => {\n    console.log(r)\n    setPopulation(r['geonames'][0]['population'])\n    setName(r['geonames'][0]['name'])\n  }\n  const handleClick = () =>{\n    setIsLoading(true)\n    fetchGeoData(inputText).then(response => {handleResponse(response)}).catch(console.log(\"Error\"))\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    if(population > 0 && name != ''){\n      navigation.navigate(\"CityResults\", {\n        population: population,\n        name: name\n      })\n    }\n  }, [{population, name}])\n    return (\n        <View style={styles.viewContainer}>\n          <Heading   text=\"SEARCH BY COUNTRY\" />\n          <TextInputBox plcHolder=\"Enter a country...\"/>\n          <SearchButton onPress={() => navigation.navigate(\"CountryResults\")}/>\n       </View>\n    )\n  }\n  export default SearchCountryScreen;"]},"metadata":{},"sourceType":"module"}