{"ast":null,"code":"var fetchGeoData = function fetchGeoData(userInput) {\n  var promise = new Promise(function (resolve, reject) {\n    var request = new XMLHttpRequest();\n    request.responseType = 'json';\n    request.open('GET', 'http://api.geonames.org/searchJSON?q=' + userInput + '&username=weknowit');\n    request.send();\n\n    request.onload = function () {\n      console.log(request);\n\n      if (request.status == 200) {\n        resolve(request.response);\n      } else {\n        console.log('error');\n        reject(request.response);\n      }\n    };\n  });\n  return promise;\n};\n\nexport { fetchGeoData };","map":{"version":3,"sources":["/Users/akseluhr/Documents/GitHub/CityPop/fetchData.js"],"names":["fetchGeoData","userInput","promise","Promise","resolve","reject","request","XMLHttpRequest","responseType","open","send","onload","console","log","status","response"],"mappings":"AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;AAClC,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C,QAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AACAD,IAAAA,OAAO,CAACE,YAAR,GAAuB,MAAvB;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,KAAb,EAAoB,0CAA0CR,SAA1C,GAAsD,oBAA1E;AACAK,IAAAA,OAAO,CAACI,IAAR;;AACAJ,IAAAA,OAAO,CAACK,MAAR,GAAiB,YAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;AACA,UAAIA,OAAO,CAACQ,MAAR,IAAkB,GAAtB,EAA2B;AACzBV,QAAAA,OAAO,CAACE,OAAO,CAACS,QAAT,CAAP;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAR,QAAAA,MAAM,CAACC,OAAO,CAACS,QAAT,CAAN;AACD;AACF,KARD;AASD,GAde,CAAhB;AAeA,SAAOb,OAAP;AACD,CAjBD;;AAmBA,SAASF,YAAT","sourcesContent":["// Fetches the data from an end pouint based on user input.\n// Either resolves or rejects the request.\nconst fetchGeoData = (userInput) => {\n  const promise = new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest()\n    request.responseType = 'json'\n    request.open('GET', 'http://api.geonames.org/searchJSON?q=' + userInput + '&username=weknowit')\n    request.send()\n    request.onload = () => {\n      console.log(request)\n      if (request.status == 200) {\n        resolve(request.response)\n      } else {\n        console.log('error')\n        reject(request.response)\n      }\n    }\n  })\n  return promise\n}\n\nexport { fetchGeoData }\n\n"]},"metadata":{},"sourceType":"module"}