{"ast":null,"code":"var fetchGeoData = function fetchGeoData() {\n  fetch('http://api.geonames.org/searchJSON?q=london&username=weknowit?', {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json;\n  }).then(function (data) {\n    return console.log(data);\n  });\n};\n\nvar fetchGeoData2 = function fetchGeoData2() {\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", \"http://api.geonames.org/searchJSON?q=london&username=weknowit?\");\n  request.send();\n\n  request.onload = function () {\n    console.log(request);\n    request.status == 200 ? console.log(JSON.parse(request.response)) : console.log(\"error\");\n  };\n};\n\nvar getSearchResults = function getSearchResults(userSearch) {\n  fetchGeoData();\n};\n\nexport { getSearchResults };","map":{"version":3,"sources":["/Users/akseluhr/Documents/GitHub/CityPop/fetchData.js"],"names":["fetchGeoData","fetch","method","then","response","json","data","console","log","fetchGeoData2","request","XMLHttpRequest","open","send","onload","status","JSON","parse","getSearchResults","userSearch"],"mappings":"AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBC,EAAAA,KAAK,CAAC,gEAAD,EAAmE;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAnE,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,GAFZ;AAMC,CAPL;;AASA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAK;AACzB,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,gEAApB;AACAF,EAAAA,OAAO,CAACG,IAAR;;AACAH,EAAAA,OAAO,CAACI,MAAR,GAAiB,YAAM;AACrBP,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAA,IAAAA,OAAO,CAACK,MAAR,IAAkB,GAAlB,GAAwBR,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACN,QAAnB,CAAZ,CAAxB,GAAoEG,OAAO,CAACC,GAAR,CAAY,OAAZ,CAApE;AACD,GAHD;AAID,CARD;;AASA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAgB;AACvCnB,EAAAA,YAAY;AACb,CAFD;;AAGA,SAAQkB,gBAAR","sourcesContent":["const fetchGeoData = () =>Â {\n    fetch('http://api.geonames.org/searchJSON?q=london&username=weknowit?', {method: \"GET\"})\n      .then(response => response.json)\n      .then(data => console.log(data));\n\n\n\n    }\n\nconst fetchGeoData2 = () =>{\n  let request = new XMLHttpRequest();\n  request.open(\"GET\", \"http://api.geonames.org/searchJSON?q=london&username=weknowit?\")\n  request.send();\n  request.onload = () => {\n    console.log(request);\n    request.status == 200 ? console.log(JSON.parse(request.response)) : console.log(\"error\")\n  }\n}\nconst getSearchResults = (userSearch) => {\n  fetchGeoData()\n}\nexport {getSearchResults};"]},"metadata":{},"sourceType":"module"}